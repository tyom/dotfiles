function continue_or_skip {
  print_question "$1 (y/n) "

  if $YES_OVERRIDE; then echo && return 0; fi

  read -n 1 yn

  [[ "$yn" =~ ^[Yy]$ ]] && echo && return 0
  [[ "$yn" =~ ^[Nn]$ ]] && echo && return 1

  echo && confirm_inline
}

# yes to continue, no to exit
function continue_or_exit {
  print_question "$1 Continue? (y/n) \n"

  while true; do
    if $YES_OVERRIDE; then break; fi

    read -n 1 yn
    case $yn in
      [Yy]*) echo && break;;
      [Nn]*) echo && exit;;
      *) echo " Please answer yes or no."
    esac
  done
}

function execute {
  $1 &> /dev/null
  print_result $? "${2:-$1}"
}

function print_step {
  printf "\e[0;36m ▶ \e[0m$1\n"
}

function print_question {
  printf "\e[0;33m ⁇ $1\e[0m"
}

function print_info {
  printf "\e[0;35m » $1\e[0m\n"
}

function print_info {
  printf "\e[0;35m » $1\e[0m\n"
}

function print_success {
  printf "\e[0;32m ✔ $1\e[0m\n"
}

function print_error {
  printf "\e[0;31m ✖ $1 $2\e[0m\n"
}

function print_result {
  [ $1 -eq 0 ] \
    && print_success "$2" \
    || print_error "$2"

  [ "$3" == "true" ] && [ $1 -ne 0 ] \
    && exit
}

function which_os {
  declare -r OS_NAME="$(uname -s)"
  local os=""

  if [ "$OS_NAME" == "Darwin" ]; then
    os="macos"
  elif [ "$OS_NAME" == "Linux" ]; then
    if [[ -f /etc/debian_version ]]; then
      os="debian"
    elif [[ -f /etc/redhat-release ]]; then
      os="redhat"
    else
      os="linux"
    fi
  fi
  printf $os
}

exists () {
  command -v $1 >/dev/null 2>&1
}
